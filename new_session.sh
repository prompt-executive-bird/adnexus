#!/bin/bash

##
## new_session.sh - Creates and initialises session files
##
#
# Usage: new_session.sh [identifier] [return email]
#
# TODO: Update the number of cards generated by default.
#

IDENTIFIER=""
RETURN_ADDRESS=""

# If the parameters were provided, use those instead of asking interactively.
if [ -n "$1" ]; then
    $IDENTIFIER="$1"
fi
if [ -n "$2" ]; then
    $RETURN_ADDRESS="$2"
fi

# If not provided via parameters, ask for the following information:
#   - Identifier
#   - Email return address

# Get the identifier, repeating if it was blank
while [ -z "$IDENTIFIER" ]; do
    read -p "Enter a session identifier: " IDENTIFIER
done
# Get the email address, as above
while [ -z "$RETURN_ADDRESS" ]; do
    read -p "Enter a return address for outgoing emails: " RETURN_ADDRESS
done

# Change directory to that of this script
cd "$(dirname "$0")"

# Copy the session files to a directory named as the identifier. Return 1 if it
# already exists.
if [ -e "$IDENTIFIER" ]; then
    echo "Error: $0: $IDENTIFIER already exists." >&2
    exit 1
fi

cp -r "skeleton" "$IDENTIFIER"

# Add a symbolic link to the scripts/binaries to the session directory
ln -s "../bin" "$IDENTIFIER/bin"

# Enter into the session directory
cd "$IDENTIFIER"

# Update SESSION and RETURN_ADDRESS variables in Makefile
cat Makefile |
    sed -e "s/^SESSION =.*$/SESSION = \"$IDENTIFIER\"/" \
        -e "s/^RETURN_ADDRESS =.*$/RETURN_ADDRESS = \"$RETURN_ADDRESS\"/" \
    > Makefile.new
mv Makefile.new Makefile

# Update the match card TeX file with appropriate border image.
#
# NB!    This directory must be specified as an absolute path, with slashes
#        properly escaped.
BORDER_PATH="$(echo "$(pwd)/card/images/match-card-border.png" |
    sed -e 's/\//\\\//g')"
cat card/match_card.tex |
    sed -e "s/\(\\\newcommand{\\\borderimagepath}\).*/\1{$BORDER_PATH}/" \
    > card/match_card.tex.new
mv card/match_card.tex.new card/match_card.tex

exit 0

